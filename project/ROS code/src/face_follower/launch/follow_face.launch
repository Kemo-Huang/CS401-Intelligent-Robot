<launch>
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" >
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>

  <node name="face_detector" pkg="face_follower" type="detector.py" >
    <param name="cascade_classifier" value="$(find face_follower)/config/haarcascade_frontalface_default.xml"/>
    <param name="image_topic_input" value="/usb_cam/image_raw" />
    <param name="image_topic_output" value="/face_detection/image_raw" />
    <param name="coordinates" value="/face_detection/coordinates" />

  </node>

  <node name="face_tracker" pkg="face_follower" type="tracker.py" >
    <param name="image_topic_input" value="/usb_cam/image_raw" />
    <param name="image_topic_output" value="/face_tracker/image_raw" />
    <param name="tracker_coords" value="/face_tracker/bbox" />
    <param name="coordinates" value="/face_detection/coordinates" />
  </node>

  <node name="image_view_tracker" pkg="image_view" type="image_view" respawn="false" >
    <remap from="image" to="/face_tracker/image_raw"/>
    <param name="autosize" value="true" />
  </node>

  <node name="face_follower" pkg="face_follower" type="follower.py" output="screen" />

  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
  </node>

</launch>
